
#include <fstream>
#include <iostream>
#include <limits>
#include <string>
#include <string.h>
#include <regex>
#include <stdio.h>

using namespace std;

template <typename T>
T get_input(const std::string& strQuery);



std::string get_username();
std::string get_password();
std::string get_mail();

void login_as_client();
void login_as_agent();

void register_user();
void main_menu();
bool Email_check(string email);
void home_page();

int main()
{
	home_page();
}

void home_page() {

	cout << "#############################################################" << endl;
	cout << "#                 Welcome to Harel Tours                    #" << endl;
	cout << "#                    _                                      #" << endl;
	cout << "#                  -=\\`\\                                    #" << endl;
	cout << "#              |\\ ____\\_\\___                                #" << endl;
	cout << "#            -=\\c`_________ _`)                             #" << endl;
	cout << "#               `~~~~~/ /~~`\                                #" << endl;
	cout << "#                 -==/ /                                    #" << endl;
	cout << "#                   '-'                                     #" << endl;
	cout << "#                  _  _                                     #" << endl;
	cout << "#                 ( `   )_                                  #" << endl;
	cout << "#                (    )    `)                               #" << endl;
	cout << "#              (_   (_ .  _) _)                             #" << endl;
	cout << "#                                             _             #" << endl;
	cout << "#                                            (  )           #" << endl;
	cout << "#                                          ( `  ) . )       #" << endl;
	cout << "#           Hotel                         (_, _(  ,_)_)     #" << endl;
	cout << "#         |_______|                                         #" << endl;
	cout << "#         |_______|                                         #" << endl;
	cout << "#         |_______|                                         #" << endl;
	cout << "#         |_______|                                         #" << endl;
	cout << "#         |_______|                                         #" << endl;
	cout << "#         |_______|                                         #" << endl;
	cout << "#         |_______|                                         #" << endl;
	cout << "#         |_______|                                         #" << endl;
	cout << "#############################################################" << endl;
	main_menu();
}
template <typename T>
T get_input(const std::string& strQuery)
{
	std::cout << strQuery << "\n> ";
	T out = T();

	while (!(std::cin >> out)) {
		std::cin.clear();
		std::cin.ignore(std::numeric_limits <std::streamsize>::max(), '\n');
		std::cout << "Error!" "\n";
		std::cout << strQuery << "\n> ";
	}

	return out;
}
std::string get_password()
{
	std::string password1 = get_input <std::string>("Please enter your password.");
	std::string password2 = get_input <std::string>("Please re-enter your password.");

	while (password1 != password2) {
		std::cout << "Error! Passwords do not match." "\n";
		password1 = get_input <std::string>("Please enter your password.");
		password2 = get_input <std::string>("Please re-enter your password.");
	}

	return password1;
}
std::string get_username()
{
	std::string username = get_input <std::string>("Please enter a username.");
	std::cout << "Username: \"" << username << "\"\n";

	while (get_input <int>("Confirm? [0|1]") != 1) {
		username = get_input <std::string>("Please enter a username.");
		std::cout << "Username: \"" << username << "\"\n";
	}

	return username;
}
std::string get_mail()
{
	string mail;
	cout << "Enter your Email-Id:" << endl;
	cin >> mail;
	while (!(Email_check(mail)))
	{
		cout << "bad email , try again:";
		cin >> mail;
	}
	return mail;
}
bool Email_check(string email)
{
	const regex pattern("(\\w+)(\\.|_)?(\\w*)@(\\w+)(\\.(\\w+))+");
	return regex_match(email, pattern);
}




void login_as_client()
{
	Client* Customer_Information = get_all_users();
	string username = get_username();
	string password = get_password();
	const char* username1 = username.c_str();
	const char* password1 = password.c_str();
	int size_of_users = SizeOfClientsFile();

	for (int i = 0; i < size_of_users; ++i)
	{

		if (strcmp(Customer_Information[i].username, username1) == 0)
		{
			if (strcmp(Customer_Information[i].password, password1) == 0)
			{
				client_menu();

			}
			else
			{
				cout << "Incorrect password Re-enter the password " << endl;
				password = get_password();
				password1 = password.c_str();
			}
		}
	}

	std::cout << "You are not registered in the system, please register" "\n";
	register_user();
}
void login_as_agent()
{
	agents* Agent_Information = get_all_agents();
	string username = get_username();
	string password = get_password();
	const char* username1 = username.c_str();
	const char* password1 = password.c_str();
	int size_of_agents = SizeOfAgentsFile();

	for (int i = 0; i < size_of_agents; ++i)
	{

		if (strcmp(Agent_Information[i].username, username1) == 0)
		{
			if (strcmp(Agent_Information[i].password, password1) == 0)
			{
				agent_menu();

			}
			else
			{
				cout << "Incorrect password Re-enter the password " << endl;
				password = get_password();
				password1 = password.c_str();
			}
		}
	}

	std::cout << "You are not registered in the system, contact with ur work manager" "\n";

}
void main_menu()
{

	int choice;

	do
	{
		cout << "Hello, Would you like to log in or register?" "\n"
			"[1] Login as client" "\n"
			"[2] Login as agent" "\n"
			"[3] Register" "\n"
			"[4] Exit""\n";
		cout << "Enter your choise:";
		cin >> choice;
		switch (choice)
		{
		case 1:
			login_as_client();
			break;
		case 2:
			login_as_agent();
			break;
		case 3:
			register_user();
			break;
		case 4:
			exit(1);
			break;
		}
	} while (true);
}
void register_user()
{
	std::string username = get_username();
	std::string password = get_password();
	std::string mail = get_mail();
	if (SetClient(username, password, mail)) {
		cout << " registration succeeded""\n";
		login_as_client();
	}
	else {
		cout << " registration failed,try again later""\n";
		exit(1);
	}

}



void agent_menu() {
	int choice;

	do
	{
		cout <<
			"[1] package management" "\n"
			"[2] Order management" "\n"
			"[3] Messages" "\n";
		cout << "Enter ur choise:";
		cin >> choice;
		switch (choice)
		{
		case 1:
			//package_management();
			break;
		case 2:
			//Order_management();
			break;
		case 3:
			//messages();
			break;
		}
	} while (true);
};
void client_menu() {
	int choice;

	do
	{
		cout <<
			"[1] Find a vaction" "\n"
			"[2] Order status" "\n"
			"[3] Wish list" "\n"
			"[4] Messages""\n";
		cout << "Enter ur choise:";
		cin >> choice;
		switch (choice)
		{
		case 1:
			find_vaction();
			break;
		case 2:
			order_status();
			break;
		case 3:
			wish_list();
			break;
		case 4:
			messages();
			break;
		}
	} while (true);
};
