#include <fstream>
#include <iostream>
#include <limits>
#include <string>
#include <string.h>

using namespace std;

template <typename T>
T get_input(const std::string& strQuery);



std::string get_username();
std::string get_password();
std::string get_mail();
void save_user(const std::string& username, const std::string& password, const std::string& mail);
bool hasEnding(std::string const& fullString, std::string const& ending);

void login();
void register_user();
void main_menu();

int main()
{
	main_menu();
}

template <typename T>
T get_input(const std::string& strQuery)
{
	std::cout << strQuery << "\n> ";
	T out = T();

	while (!(std::cin >> out)) {
		std::cin.clear();
		std::cin.ignore(std::numeric_limits <std::streamsize>::max(), '\n');
		std::cout << "Error!" "\n";
		std::cout << strQuery << "\n> ";
	}

	return out;
}

std::string get_password()
{
	std::string password1 = get_input <std::string>("Please enter your password.");
	std::string password2 = get_input <std::string>("Please re-enter your password.");

	while (password1 != password2) {
		std::cout << "Error! Passwords do not match." "\n";
		password1 = get_input <std::string>("Please enter your password.");
		password2 = get_input <std::string>("Please re-enter your password.");
	}

	return password1;
}

std::string get_username()
{
	std::string username = get_input <std::string>("Please enter a username.");
	std::cout << "Username: \"" << username << "\"\n";

	while (get_input <int>("Confirm? [0|1]") != 1) {
		username = get_input <std::string>("Please enter a username.");
		std::cout << "Username: \"" << username << "\"\n";
	}

	return username;
}
std::string get_mail()
{
	std::string mail = get_input <std::string>("Please enter your email adress.");
	std::string check = ".com";
	while (!(hasEnding(mail,check)))  ///////////// ???????????????????
	{
			std::cout << "Error! Invalid email (missing '.com')" "\n";
			std::string mail = get_input <std::string>("Please enter your email adress.");
			if (hasEnding(mail, check))
			{
				return mail;
			}
	}
	if (hasEnding(mail, check))
	{
		return mail;
	}

}

bool hasEnding(std::string const& fullString, std::string const& ending)
{
	if (fullString.length() >= ending.length()) {
		return (0 == fullString.compare(fullString.length() - ending.length(), ending.length(), ending));
	}
	else
	{
		return false;
	}
}


void login()
{
	Client* Customer_Information = get_all_users();
	string username=get_username();
	string password = get_password();
	const char*username1 = username.c_str();
	const char* password1 = password.c_str();

	
	int i = 0;
///////////for  + check_length of client*
	while (Customer_Information[i])
	{
		
		if (strcmp(Customer_Information[i].username, username1) == 0)
		{
				if (strcmp(Customer_Information[i].password, password1) == 0)
				{
								//פתיחת תפריט לקלוח //חזרה

				}
				else
				{
				cout << "Incorrect password Re-enter the password " << endl;
				password = get_password();
				password1 = password.c_str();

				}
		

		}


		i++;
	}

	std::cout << "You are not registered in the system, please register" "\n";
	register_user();


}

void main_menu()
{ 
	int choice = get_input <int>(
		"Hello, Would you like to log in or register?" "\n"
		"[1] Login" "\n"
		"[2] Register" "\n"
		"[3] Exit");

	switch (choice)
	{
	case 1:
		login();
		break;
	case 2:
		register_user();
		break;
	default:
		std::cout << "wrong input,bye bye\n!";
	}
}


void register_user()
{
	std::string username = get_username();
	std::string password = get_password();
	std::string mail = get_mail();
	if(SetClient(username, password, mail))
		print seuccess
}




